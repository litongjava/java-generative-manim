## 图形化证明：乘法结合律 \( 7 \times 5 \times 2 = 7 \times (5 \times 2) \)

### 【场景一：问题引入与标题展示】

*   **背景设计与整体氛围**
    *   背景采用从浅灰 (#DDDDDD) 到白色 (#FFFFFF) 的垂直渐变，营造简洁、清晰的学术氛围。
    *   右上角显示场景编号“01”，字体稍小，颜色为深灰色 (#555555)。

*   **主要内容**
    *   屏幕中心偏上位置出现标题：“图形化证明：乘法结合律”，文字颜色为黑色 (#000000)，使用 `Write` 动画效果，时长 1.5 秒。
    *   标题下方展示核心待证明的数学公式：
        \[
        7 \times 5 \times 2 = 7 \times (5 \times 2)
        \]
    *   该公式使用 LaTeX 渲染，字体大小比标题稍小，颜色为深蓝 (#00008B)。采用 `FadeIn` 动画效果，在标题完全显示后延迟 0.5 秒出现，时长 1 秒。
    *   数字 7、5、2 可以使用不同颜色（例如：7-红色 #FF0000, 5-绿色 #008000, 2-蓝色 #0000FF）来突出它们在后续图形化过程中的对应关系，括号也需清晰显示。

*   **相机与过渡效果**
    *   相机保持静态，聚焦于屏幕中心内容。
    *   整体动画节奏清晰，标题和公式依次出现，留有足够的阅读时间。

---

### 【场景二：可视化计算 (7 x 5) x 2】

*   **背景与布局**
    *   背景保持浅灰到白色的渐变。
    *   屏幕布局分为左右两部分：
        *   左侧区域（约占屏幕 1/3）用于显示文字说明和计算步骤。
        *   右侧区域（约占屏幕 2/3）用于展示三维图形可视化。
    *   右上角显示场景编号“02”。
    *   在右侧区域设置三维坐标系 `ThreeDAxes`，x, y, z 轴有清晰标签，轴范围大致为 x: [0, 8], y: [0, 6], z: [0, 3]。

*   **内容呈现**
    *   **左侧文本与公式：**
        1.  首先出现文本：“计算方式一：先算 \(7 \times 5\)”，使用 `Write` 效果，时长 1 秒。
        2.  下方展示计算过程：
            \[
            (7 \times 5) \times 2
            \]
            该公式使用 LaTeX 渲染，其中 `(7 \times 5)` 部分高亮（例如，背景色设为淡黄色 #FFFFE0）。`FadeIn` 效果，时长 0.5 秒。
        3.  再下方显示中间结果：“\( 7 \times 5 = 35 \)” ，使用 `Write` 效果，时长 1 秒。
        4.  最后显示完整计算：“\( = 35 \times 2 = 70 \)” ，使用 `ReplacementTransform` 从 `(7 \times 5) \times 2` 平滑过渡，时长 1.5 秒。
    *   **右侧三维可视化：**
        1.  **构建 7x5 底面**：在 XY 平面上，生成一个由 7x5=35 个小立方体 (`Cube`) 组成的 VGroup，排列成 7 行 5 列。每个小立方体边长为 0.5。使用 `Create` 动画逐个或逐行/列生成，整体时长 2 秒。这组立方体颜色设为红色 (#FF0000)，代表数字 7 的维度，和绿色 (#008000)，代表数字 5 的维度，可以交错或用边框颜色区分。或者统一用一种颜色（如橙色 #FFA500）表示乘积 35。
        2.  **标注尺寸**：在对应的 X 轴和 Y 轴方向上添加标签 "7" 和 "5"。
        3.  **向上堆叠**：将这个 7x5 的底层复制一层，并向上移动一个单位（2 * 小立方体边长）的高度。第二层使用 `TransformFromCopy` 或 `Create` 效果生成，时长 1.5 秒。第二层立方体颜色使用蓝色 (#0000FF)，代表乘以 2。
        4.  **标注高度**：在 Z 轴方向添加标签 "2"。
        5.  最终形成一个 7x5x2 的长方体。

*   **相机与动画效果**
    *   初始相机视角设置为 `phi=75*DEGREES, theta=-45*DEGREES`，能清晰看到 XY 平面和 Z 轴。
    *   在创建 7x5 底面时，相机可以轻微俯视。
    *   在向上堆叠时，相机可以稍微调整角度（例如，`phi` 减小一点，`theta` 变化一点）或轻微拉远，以更好地展示立体结构。使用 `self.move_camera(...)` 平滑过渡，时长与堆叠动画同步。
    *   左侧文本与右侧图形动画同步进行，例如，当显示 \(7 \times 5 = 35\) 时，右侧刚好完成 7x5 底面的构建。当显示 \( \times 2 \) 时，开始向上堆叠。

---

### 【场景三：可视化计算 7 x (5 x 2)】

*   **背景与布局**
    *   背景和布局与场景二类似：浅灰渐变背景，左文右图，三维坐标轴。
    *   右上角显示场景编号“03”。
    *   三维坐标轴设置与场景二相同 (x: [0, 8], y: [0, 6], z: [0, 3])，但初始构建的平面可能不同。

*   **内容呈现**
    *   **左侧文本与公式：**
        1.  首先出现文本：“计算方式二：先算 \(5 \times 2\)”，使用 `Write` 效果，时长 1 秒。
        2.  下方展示计算过程：
            \[
            7 \times (5 \times 2)
            \]
            该公式使用 LaTeX 渲染，其中 `(5 \times 2)` 部分高亮（淡黄色背景 #FFFFE0）。`FadeIn` 效果，时长 0.5 秒。
        3.  再下方显示中间结果：“\( 5 \times 2 = 10 \)” ，使用 `Write` 效果，时长 1 秒。
        4.  最后显示完整计算：“\( = 7 \times 10 = 70 \)” ，使用 `ReplacementTransform` 从 `7 \times (5 \times 2)` 平滑过渡，时长 1.5 秒。
    *   **右侧三维可视化：**
        1.  **构建 5x2 "侧面"**：例如，在 YZ 平面上（或 XY 平面上，但组织方式不同），生成一个由 5x2=10 个小立方体 (`Cube`) 组成的 VGroup，排列成 5 行 2 列。小立方体边长 0.5。使用 `Create` 动画，时长 1.5 秒。这组立方体颜色可以结合绿色 (#008000) 代表 5，蓝色 (#0000FF) 代表 2。或者统一用一种颜色（如青色 #00FFFF）表示乘积 10。
        2.  **标注尺寸**：在对应的 Y 轴和 Z 轴（或 X 和 Y 轴）方向上添加标签 "5" 和 "2"。
        3.  **沿另一方向扩展**：将这个 5x2 的“切片”沿着 X 轴（或 Z 轴）方向复制扩展 7 次（或移动 7 * 小立方体边长 的距离）。使用 `TransformFromCopy` 或 `Create` 效果逐层生成，时长 2 秒。新扩展的维度用红色 (#FF0000) 代表 7。
        4.  **标注长度**：在 X 轴（或 Z 轴）方向添加标签 "7"。
        5.  最终也形成一个 7x5x2 的长方体。**关键**：确保这个最终长方体的形状、尺寸、颜色（所有小方块最终统一成灰色 #808080）和空间方位与场景二最终生成的长方体完全一致。

*   **相机与动画效果**
    *   初始相机视角可能需要调整（例如 `phi=75*DEGREES, theta=15*DEGREES`），以便清晰展示 5x2 切面的构建。
    *   在沿第三个维度扩展时，相机进行平滑旋转和/或缩放 (`move_camera`)，最终定格在与场景二结束时**完全相同**的视角和缩放级别，强调两个过程得到了同一个物体。旋转动画时长与扩展动画同步。
    *   左右内容同样保持同步。

---

### 【场景四：对比与结论】

*   **背景与布局**
    *   背景恢复为简洁的纯色背景，例如浅蓝色 (#E0EFFF)，或者使用场景一的渐变背景。
    *   屏幕中心展示最终的 7x5x2 长方体（灰色 #808080）。
    *   长方体左右两侧分别展示两种计算路径的最终公式。
    *   屏幕底部留出空间展示结论性文字。
    *   右上角显示场景编号“04”。

*   **内容呈现**
    *   **中心图形**：显示在场景二和场景三中最终形成的、完全相同的 7x5x2 长方体。可以使用 `FadeIn` 效果出现，并可以添加缓慢旋转效果（`Rotating`），让观众从不同角度确认其形态。时长 2 秒。
    *   **左侧公式**：展示
        \[ (7 \times 5) \times 2 = 35 \times 2 = 70 \]
        使用 `Write` 动画效果，从左至右依次出现，时长 1.5 秒。颜色与之前场景保持一致。
    *   **右侧公式**：展示
        \[ 7 \times (5 \times 2) = 7 \times 10 = 70 \]
        使用 `Write` 动画效果，从左至右依次出现，时长 1.5 秒。颜色与之前场景保持一致。
    *   **连接线**：从左侧公式指向中心长方体，再从右侧公式指向中心长方体，画出两条箭头（`Arrow`），使用 `Create` 动画，时长 1 秒。
    *   **核心等式**：在长方体下方或屏幕中央显眼位置，再次展示核心等式：
        \[ (7 \times 5) \times 2 = 7 \times (5 \times 2) \]
        使用 `FadeIn` 效果，并可以对等号 `=` 进行强调（例如放大或闪烁一下）。时长 1 秒。
    *   **结论文字**：在屏幕最下方出现结论性文字：“两种不同的计算顺序，得到了完全相同的几何体和结果 (70)。这直观地证明了乘法结合律。” 文字颜色为黑色 (#000000)，使用 `FadeIn` 效果，时长 1.5 秒。

*   **相机与动画效果**
    *   相机聚焦于中心长方体和两侧的公式。如果长方体旋转，相机保持稳定或进行非常缓慢的环绕移动。
    *   整体动画流程：先出现长方体 -> 再出现左右计算公式 -> 画箭头连接 -> 出现核心等式 -> 最后出现结论文字。每个步骤之间有 0.3-0.5 秒的停顿。

---

### 【其他整体要求】

*   **统一视觉风格**
    *   所有场景均采用高清渲染。
    *   所有数学公式均使用 LaTeX `Tex` 或 `MathTex` 精确渲染，保证清晰度。
    *   颜色方案：背景色调柔和（渐变灰白或浅蓝），坐标轴为深灰，文字为黑色或深蓝，代表数字 7, 5, 2 的颜色（红、绿、蓝）在场景二、三中保持一致性，最终组合的长方体使用中性色（如灰色）。重点内容（如高亮公式部分、等号、结论文字）可适当使用醒目颜色或效果。场景编号统一风格。
*   **动画与转场**
    *   场景之间的过渡使用简洁的 `FadeOut` 旧场景元素、`FadeIn` 新场景元素，或者直接替换，保持流畅。过渡时间约 0.5 - 1 秒。
    *   相机运动（旋转、平移、缩放）平滑自然，避免突兀跳动，运动速度适中，确保观众能跟上图形和逻辑的变化。
    *   所有动画（`Create`, `Write`, `FadeIn`, `ReplacementTransform`, `TransformFromCopy`, `Rotating`）的时长和延迟精心设计，与解说节奏匹配（如果后续配音），保证信息传递的有效性。

---